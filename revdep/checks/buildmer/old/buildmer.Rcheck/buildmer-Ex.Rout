
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "buildmer"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('buildmer')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("add.terms")
> ### * add.terms
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add.terms
> ### Title: Add terms to a formula
> ### Aliases: add.terms
> 
> ### ** Examples
> 
> library(buildmer)
> form <- Reaction ~ Days + (1|Subject)
> add.terms(form,'Days|Subject')
Reaction ~ 1 + Days + (1 + Days | Subject)
> add.terms(form,'(0+Days|Subject)')
Reaction ~ 1 + Days + (1 | Subject) + (0 + Days | Subject)
> add.terms(form,c('many','more|terms','to|terms','(be|added)','to|test'))
Reaction ~ 1 + Days + many + (1 | Subject) + (0 + more + to | 
    terms) + (be | added) + (0 + to | test)
> 
> 
> 
> cleanEx()
> nameEx("build.formula")
> ### * build.formula
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: build.formula
> ### Title: Convert a buildmer term list into a proper model formula
> ### Aliases: build.formula
> 
> ### ** Examples
> 
> library(buildmer)
> form1 <- Reaction ~ Days + (Days|Subject)
> terms <- tabulate.formula(form1)
> form2 <- build.formula(dep='Reaction',terms)
> 
> # check that the two formulas give the same results
> library(lme4)
Loading required package: Matrix
> check <- function (f) resid(lmer(f,sleepstudy))
> all.equal(check(form1),check(form2))
[1] TRUE
> 
> 
> 
> cleanEx()

detaching 'package:lme4', 'package:Matrix'

> nameEx("buildGLMMadaptive")
> ### * buildGLMMadaptive
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildGLMMadaptive
> ### Title: Use 'buildmer' to fit generalized linear mixed models using
> ###   'mixed_model' from package 'GLMMadaptive'
> ### Aliases: buildGLMMadaptive
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("buildbam")
> ### * buildbam
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildbam
> ### Title: Use 'buildmer' to fit big generalized additive models using
> ###   'bam' from package 'mgcv'
> ### Aliases: buildbam
> 
> ### ** Examples
> 
> ## Don't show: 
> library(buildmer)
> m <- buildbam(f1 ~ s(timepoint,bs='cr'),data=vowels)
Determining predictor order
Fitting via lm: f1 ~ 1
Currently evaluating LRT for: s(timepoint, bs = "cr")
Fitting via bam, with ML: f1 ~ 1 + s(timepoint, bs = "cr")
Updating formula: f1 ~ 1 + s(timepoint, bs = "cr")
Fitting ML reference model
Fitting via bam, with ML: f1 ~ 1 + s(timepoint, bs = "cr")
Testing terms
Fitting via lm: f1 ~ 1
  grouping                    term                         block    score
1       NA                       1                       NA NA 1       NA
2       NA s(timepoint, bs = "cr") NA NA s(timepoint, bs = "cr") -189.836
           LRT Iteration
1           NA         1
2 3.591558e-83         1
All terms are significant
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("buildcustom")
> ### * buildcustom
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildcustom
> ### Title: Use 'buildmer' to perform stepwise elimination using a custom
> ###   fitting function
> ### Aliases: buildcustom
> 
> ### ** Examples
> 
> ## Use \code{buildmer} to do stepwise linear discriminant analysis
> library(buildmer)
> migrant[,-1] <- scale(migrant[,-1])
> flipfit <- function (p,formula) {
+     # The predictors must be entered as dependent variables in a MANOVA
+     # (i.e. the predictors must be flipped with the dependent variable)
+     Y <- model.matrix(formula,migrant)
+     m <- lm(Y ~ 0+migrant$changed)
+     # the model may error out when asking for the MANOVA
+     test <- try(anova(m))
+     if (inherits(test,'try-error')) test else m
+ }
> crit.F <- function (ma,mb) { # use whole-model F
+     pvals <- anova(mb)$'Pr(>F)' # not valid for backward!
+     pvals[length(pvals)-1]
+ }
> crit.Wilks <- function (ma,mb) {
+     if (is.null(ma)) return(crit.F(ma,mb)) #not completely correct, but close as F approximates X2
+     Lambda <- anova(mb,test='Wilks')$Wilks[1]
+     p <- length(coef(mb))
+     n <- 1
+     m <- nrow(migrant)
+     Bartlett <- ((p-n+1)/2-m)*log(Lambda)
+     pchisq(Bartlett,n*p,lower.tail=FALSE)
+ }
> 
> # First, order the terms based on Wilks' Lambda
> m <- buildcustom(changed ~ friends.nl+friends.be+multilingual+standard+hearing+reading+attention+
+ sleep+gender+handedness+diglossic+age+years,direction='order',fit=flipfit,crit=crit.Wilks)
Determining predictor order
Currently evaluating custom criterion for: age, attention, diglossic, friends.be, friends.nl, gender, handedness, hearing, multilingual, reading, sleep, standard, years
Updating formula: changed ~ 1 + diglossic
Currently evaluating custom criterion for: age, attention, friends.be, friends.nl, gender, handedness, hearing, multilingual, reading, sleep, standard, years
Updating formula: changed ~ 1 + diglossic + age
Currently evaluating custom criterion for: attention, friends.be, friends.nl, gender, handedness, hearing, multilingual, reading, sleep, standard, years
Updating formula: changed ~ 1 + diglossic + age + reading
Currently evaluating custom criterion for: attention, friends.be, friends.nl, gender, handedness, hearing, multilingual, sleep, standard, years
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be
Currently evaluating custom criterion for: attention, friends.nl, gender, handedness, hearing, multilingual, sleep, standard, years
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years
Currently evaluating custom criterion for: attention, friends.nl, gender, handedness, hearing, multilingual, sleep, standard
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years + multilingual
Currently evaluating custom criterion for: attention, friends.nl, gender, handedness, hearing, sleep, standard
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years + multilingual + attention
Currently evaluating custom criterion for: friends.nl, gender, handedness, hearing, sleep, standard
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years + multilingual + attention + handedness
Currently evaluating custom criterion for: friends.nl, gender, hearing, sleep, standard
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years + multilingual + attention + handedness + standard
Currently evaluating custom criterion for: friends.nl, gender, hearing, sleep
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years + multilingual + attention + handedness + standard + sleep
Currently evaluating custom criterion for: friends.nl, gender, hearing
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years + multilingual + attention + handedness + standard + sleep + friends.nl
Currently evaluating custom criterion for: gender, hearing
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years + multilingual + attention + handedness + standard + sleep + friends.nl + hearing
Currently evaluating custom criterion for: gender
Updating formula: changed ~ 1 + diglossic + age + reading + friends.be + years + multilingual + attention + handedness + standard + sleep + friends.nl + hearing + gender
> # Now, use the six most important terms (arbitrary choice) in the LDA
> library(MASS)
> m <- lda(changed ~ diglossic + age + reading + friends.be + years + multilingual,data=migrant)
> 
> 
> 
> cleanEx()

detaching 'package:MASS'

> nameEx("buildgam")
> ### * buildgam
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildgam
> ### Title: Use 'buildmer' to fit generalized additive models using 'gam'
> ###   from package 'mgcv'
> ### Aliases: buildgam
> 
> ### ** Examples
> 
> ## Don't show: 
> library(buildmer)
> m <- buildgam(f1 ~ s(timepoint,bs='cr'),data=vowels)
Determining predictor order
Fitting via gam, with ML: f1 ~ 1
Currently evaluating LRT for: s(timepoint, bs = "cr")
Fitting via gam, with ML: f1 ~ 1 + s(timepoint, bs = "cr")
Updating formula: f1 ~ 1 + s(timepoint, bs = "cr")
Fitting ML reference model
Fitting via gam, with ML: f1 ~ 1 + s(timepoint, bs = "cr")
Testing terms
Fitting via gam, with ML: f1 ~ 1
  grouping                    term                         block     score
1       NA                       1                       NA NA 1        NA
2       NA s(timepoint, bs = "cr") NA NA s(timepoint, bs = "cr") -189.7834
           LRT Iteration
1           NA         1
2 3.785335e-83         1
All terms are significant
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("buildgamm4")
> ### * buildgamm4
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildgamm4
> ### Title: Use 'buildmer' to fit generalized additive models using package
> ###   'gamm4'
> ### Aliases: buildgamm4
> 
> ### ** Examples
> 
> ## Don't show: 
> library(buildmer)
> m <- buildgamm4(Reaction ~ Days + (Days|Subject),data=lme4::sleepstudy)
Determining predictor order
Fitting via lm: Reaction ~ 1
Currently evaluating LRT for: Days
Fitting via lm: Reaction ~ 1 + Days
Updating formula: Reaction ~ 1 + Days
Fitting via gls (because REML was requested): Reaction ~ 1 + Days
Currently evaluating LRT for: 1 | Subject
Fitting via lmer, with REML: Reaction ~ 1 + Days + (1 | Subject)
Updating formula: Reaction ~ 1 + Days + (1 | Subject)
Currently evaluating LRT for: Days | Subject
Fitting via lmer, with REML: Reaction ~ 1 + Days + (1 + Days | Subject)
Updating formula: Reaction ~ 1 + Days + (1 + Days | Subject)
Fitting ML and REML reference models
Fitting via lmer, with REML: Reaction ~ 1 + Days + (1 + Days | Subject)
Fitting via lmer, with ML: Reaction ~ 1 + Days + (1 + Days | Subject)
Testing terms
Fitting via lmer, with REML: Reaction ~ 1 + Days + (1 | Subject)
  grouping term           block     score          LRT Iteration
1     <NA>    1         NA NA 1        NA           NA         1
2     <NA> Days      NA NA Days -32.67300           NA         1
3  Subject    1    NA Subject 1 -56.86469           NA         1
4  Subject Days NA Subject Days -22.11155 2.495022e-10         1
All terms are significant
Finalizing by converting the model to lmerTest
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("buildglmmTMB")
> ### * buildglmmTMB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildglmmTMB
> ### Title: Use 'buildmer' to perform stepwise elimination on 'glmmTMB'
> ###   models
> ### Aliases: buildglmmTMB
> 
> ### ** Examples
> 
> library(buildmer)
> m <- buildglmmTMB(Reaction ~ Days + (Days|Subject),data=lme4::sleepstudy)
Determining predictor order
Fitting via glmmTMB, with ML: Reaction ~ 1
Currently evaluating LRT for: Days
Fitting via glmmTMB, with ML: Reaction ~ 1 + Days
Updating formula: Reaction ~ 1 + Days
Fitting via glmmTMB, with REML: Reaction ~ 1 + Days
Currently evaluating LRT for: 1 | Subject
Fitting via glmmTMB, with REML: Reaction ~ 1 + Days + (1 | Subject)
Updating formula: Reaction ~ 1 + Days + (1 | Subject)
Currently evaluating LRT for: Days | Subject
Fitting via glmmTMB, with REML: Reaction ~ 1 + Days + (1 + Days | Subject)
Updating formula: Reaction ~ 1 + Days + (1 + Days | Subject)
Fitting ML and REML reference models
Fitting via glmmTMB, with REML: Reaction ~ 1 + Days + (1 + Days | Subject)
Fitting via glmmTMB, with ML: Reaction ~ 1 + Days + (1 + Days | Subject)
Testing terms
Fitting via glmmTMB, with REML: Reaction ~ 1 + Days + (1 | Subject)
  grouping term           block     score          LRT Iteration
1     <NA>    1         NA NA 1        NA           NA         1
2     <NA> Days      NA NA Days -32.67300           NA         1
3  Subject    1    NA Subject 1 -56.86469           NA         1
4  Subject Days NA Subject Days -22.11155 2.495021e-10         1
All terms are significant
> ## Don't show: ## No test: 
> ##D # What's the point of both \dontshow and \donttest, you ask? I want this to be tested when checking my package with --run-donttest, but the model is statistically nonsensical, so no good in showing it to the user!
> ##D vowels$event <- with(vowels,interaction(participant,word))
> ##D m <- buildglmmTMB(f1 ~ timepoint,include=~ar1(0+participant|event),data=vowels)
> ## End(No test)## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("buildgls")
> ### * buildgls
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildgls
> ### Title: Use 'buildmer' to fit generalized-least-squares models using
> ###   'gls' from 'nlme'
> ### Aliases: buildgls
> 
> ### ** Examples
> 
> library(buildmer)
> library(nlme)
> vowels$event <- with(vowels,interaction(participant,word))
> m <- buildgls(f1 ~ timepoint*following,correlation=corAR1(form=~1|event),data=vowels)
Determining predictor order
Fitting via gls, with ML: f1 ~ 1
Currently evaluating LRT for: following, timepoint
Fitting via gls, with ML: f1 ~ 1 + following
Fitting via gls, with ML: f1 ~ 1 + timepoint
Updating formula: f1 ~ 1 + timepoint
Currently evaluating LRT for: following
Fitting via gls, with ML: f1 ~ 1 + timepoint + following
Updating formula: f1 ~ 1 + timepoint + following
Currently evaluating LRT for: timepoint:following
Fitting via gls, with ML: f1 ~ 1 + timepoint + following + timepoint:following
Updating formula: f1 ~ 1 + timepoint + following + timepoint:following
Fitting ML reference model
Fitting via gls, with ML: f1 ~ 1 + timepoint + following + timepoint:following
Testing terms
Fitting via gls, with ML: f1 ~ 1 + timepoint + following
  grouping                term                     block      score
1       NA                   1                   NA NA 1         NA
2       NA           timepoint           NA NA timepoint -23.690805
3       NA           following           NA NA following  -7.574024
4       NA timepoint:following NA NA timepoint:following -39.065125
           LRT Iteration
1           NA         1
2           NA         1
3           NA         1
4 1.082011e-17         1
All terms are significant
> 
> 
> 
> cleanEx()

detaching 'package:nlme'

> nameEx("buildjulia")
> ### * buildjulia
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildjulia
> ### Title: Use 'buildmer' to perform stepwise elimination on models fit
> ###   with Julia package 'MixedModels' via 'JuliaCall'
> ### Aliases: buildjulia
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("buildlme")
> ### * buildlme
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildlme
> ### Title: Use 'buildmer' to perform stepwise elimination of mixed-effects
> ###   models fit via 'lme' from 'nlme'
> ### Aliases: buildlme
> 
> ### ** Examples
> 
> library(buildmer)
> m <- buildlme(Reaction ~ Days + (Days|Subject),data=lme4::sleepstudy)
Determining predictor order
Fitting via lm: Reaction ~ 1
Currently evaluating LRT for: Days
Fitting via lm: Reaction ~ 1 + Days
Updating formula: Reaction ~ 1 + Days
Fitting via gls (because REML was requested): Reaction ~ 1 + Days
Currently evaluating LRT for: 1 | Subject
Fitting via lme, with REML: Reaction ~ 1 + Days, random=~1 | Subject
Updating formula: Reaction ~ 1 + Days + (1 | Subject)
Currently evaluating LRT for: Days | Subject
Fitting via lme, with REML: Reaction ~ 1 + Days, random=~1 + Days | Subject
Updating formula: Reaction ~ 1 + Days + (1 + Days | Subject)
Fitting ML and REML reference models
Fitting via lme, with REML: Reaction ~ 1 + Days, random=~1 + Days | Subject
Fitting via lme, with ML: Reaction ~ 1 + Days, random=~1 + Days | Subject
Testing terms
Fitting via lme, with REML: Reaction ~ 1 + Days, random=~1 | Subject
  grouping term           block     score          LRT Iteration
1     <NA>    1         NA NA 1        NA           NA         1
2     <NA> Days      NA NA Days -32.67300           NA         1
3  Subject    1    NA Subject 1 -56.86469           NA         1
4  Subject Days NA Subject Days -22.11155 2.495021e-10         1
All terms are significant
> 
> 
> 
> cleanEx()
> nameEx("buildmer-class")
> ### * buildmer-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildmer-class
> ### Title: The buildmer class
> ### Aliases: buildmer-class mkBuildmer
> 
> ### ** Examples
> 
> # Manually create a bare-bones buildmer object:
> model <- lm(Sepal.Length ~ Petal.Length,iris)
> p <- list(in.buildmer=FALSE)
> library(buildmer)
> bm <- mkBuildmer(model=model,p=p,anova=NULL,summary=NULL)
> summary(bm)

Call:
lm(formula = Sepal.Length ~ Petal.Length, data = iris)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.24675 -0.29657 -0.01515  0.27676  1.00269 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)   4.30660    0.07839   54.94   <2e-16 ***
Petal.Length  0.40892    0.01889   21.65   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.4071 on 148 degrees of freedom
Multiple R-squared:   0.76,	Adjusted R-squared:  0.7583 
F-statistic: 468.6 on 1 and 148 DF,  p-value: < 2.2e-16

> 
> 
> 
> cleanEx()
> nameEx("buildmer-package")
> ### * buildmer-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildmer-package
> ### Title: Construct and fit as complete a model as possible and perform
> ###   stepwise elimination
> ### Aliases: buildmer-package
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("buildmer")
> ### * buildmer
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildmer
> ### Title: Use 'buildmer' to fit mixed-effects models using 'lmer'/'glmer'
> ###   from 'lme4'
> ### Aliases: buildmer
> 
> ### ** Examples
> 
> library(buildmer)
> m <- buildmer(Reaction ~ Days + (Days|Subject),lme4::sleepstudy)
Determining predictor order
Fitting via lm: Reaction ~ 1
Currently evaluating LRT for: Days
Fitting via lm: Reaction ~ 1 + Days
Updating formula: Reaction ~ 1 + Days
Fitting via gls (because REML was requested): Reaction ~ 1 + Days
Currently evaluating LRT for: 1 | Subject
Fitting via lmer, with REML: Reaction ~ 1 + Days + (1 | Subject)
Updating formula: Reaction ~ 1 + Days + (1 | Subject)
Currently evaluating LRT for: Days | Subject
Fitting via lmer, with REML: Reaction ~ 1 + Days + (1 + Days | Subject)
Updating formula: Reaction ~ 1 + Days + (1 + Days | Subject)
Fitting ML and REML reference models
Fitting via lmer, with REML: Reaction ~ 1 + Days + (1 + Days | Subject)
Fitting via lmer, with ML: Reaction ~ 1 + Days + (1 + Days | Subject)
Testing terms
Fitting via lmer, with REML: Reaction ~ 1 + Days + (1 | Subject)
  grouping term           block     score          LRT Iteration
1     <NA>    1         NA NA 1        NA           NA         1
2     <NA> Days      NA NA Days -32.67300           NA         1
3  Subject    1    NA Subject 1 -56.86469           NA         1
4  Subject Days NA Subject Days -22.11155 2.495022e-10         1
All terms are significant
Finalizing by converting the model to lmerTest
> 
> #tests from github issue #2:
> bm.test <- buildmer(cbind(incidence,size - incidence) ~ period + (1 | herd),
+            family=binomial,data=lme4::cbpp)
Determining predictor order
Fitting via glm: cbind(incidence, size - incidence) ~ 1
Currently evaluating LRT for: period
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
Updating formula: cbind(incidence, size - incidence) ~ 1 + period
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
Currently evaluating LRT for: 1 | herd
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
Updating formula: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
Fitting ML reference model
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
Testing terms
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + (1 | herd)
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
  grouping   term        block     score          LRT Iteration
1     <NA>      1      NA NA 1        NA           NA         1
2     <NA> period NA NA period -18.70666 1.151006e-05         1
3     herd      1    NA herd 1  -8.60986 1.822993e-04         1
All terms are significant
> bm.test <- buildmer(cbind(incidence,size - incidence) ~ period + (1 | herd),
+            family=binomial,data=lme4::cbpp,direction='forward')
Determining predictor order
Fitting via glm: cbind(incidence, size - incidence) ~ 1
Currently evaluating LRT for: period
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
Updating formula: cbind(incidence, size - incidence) ~ 1 + period
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
Currently evaluating LRT for: 1 | herd
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
Updating formula: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
  grouping   term        block        score
1     <NA>      1      NA NA 1           NA
2     <NA> period NA NA period 7.512809e-09
3     herd      1    NA herd 1 1.822993e-04
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
> bm.test <- buildmer(cbind(incidence,size - incidence) ~ period + (1 | herd),
+            family=binomial,data=lme4::cbpp,crit='AIC')
Determining predictor order
Fitting via glm: cbind(incidence, size - incidence) ~ 1
Currently evaluating AIC for: period
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
Updating formula: cbind(incidence, size - incidence) ~ 1 + period
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
Currently evaluating AIC for: 1 | herd
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
Updating formula: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
Fitting ML reference model
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
Testing terms
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + (1 | herd)
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
  grouping   term        block     score       AIC Iteration
1     <NA>      1      NA NA 1        NA        NA         1
2     <NA> period NA NA period -34.71577 -19.60994         1
3     herd      1    NA herd 1 -12.00527 -12.00527         1
All terms are significant
> bm.test <- buildmer(cbind(incidence,size - incidence) ~ period + (1 | herd),
+            family=binomial,data=lme4::cbpp,direction='forward',crit='AIC')
Determining predictor order
Fitting via glm: cbind(incidence, size - incidence) ~ 1
Currently evaluating AIC for: period
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
Updating formula: cbind(incidence, size - incidence) ~ 1 + period
Fitting via glm: cbind(incidence, size - incidence) ~ 1 + period
Currently evaluating AIC for: 1 | herd
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
Updating formula: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
  grouping   term        block     score
1     <NA>      1      NA NA 1        NA
2     <NA> period NA NA period -34.71577
3     herd      1    NA herd 1 -12.00527
Fitting via glmer: cbind(incidence, size - incidence) ~ 1 + period + (1 | herd)
> 
> 
> 
> cleanEx()
> nameEx("buildmertree")
> ### * buildmertree
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildmertree
> ### Title: Use 'buildmer' to perform stepwise elimination for _the
> ###   random-effects part_ of 'lmertree()' and 'glmertree()' models from
> ###   package 'glmertree'
> ### Aliases: buildmertree
> 
> ### ** Examples
> 
> library(buildmer)
> m <- buildmertree(Reaction ~ 1 | (Days|Subject) | Days,crit='LL',direction='order',
+                   data=lme4::sleepstudy,joint=FALSE)
Determining predictor order
Fitting via lmtree: Reaction ~ 1 | Days
Currently evaluating LL for: 1 | Subject
Fitting via lmertree: Reaction ~ 1 | (1 | Subject) | Days
boundary (singular) fit: see ?isSingular
Updating formula: Reaction ~ 1 + (1 | Subject)
Currently evaluating LL for: Days | Subject
Fitting via lmertree: Reaction ~ 1 | (1 + Days | Subject) | Days
boundary (singular) fit: see ?isSingular
None of the models converged - giving up ordering attempt.
> m <- buildmertree(Reaction ~ 1 | (Days|Subject) | Days,crit='LL',direction='order',
+                   data=lme4::sleepstudy,family=Gamma(link=identity),joint=FALSE)
Determining predictor order
Fitting via glmtree: Reaction ~ 1 | Days
Currently evaluating LL for: 1 | Subject
Fitting via glmertree: Reaction ~ 1 | (1 | Subject) | Days
Updating formula: Reaction ~ 1 + (1 | Subject)
Currently evaluating LL for: Days | Subject
Fitting via glmertree: Reaction ~ 1 | (1 + Days | Subject) | Days
boundary (singular) fit: see ?isSingular
Updating formula: Reaction ~ 1 + (1 + Days | Subject)
> 
> 
> 
> cleanEx()
> nameEx("buildmultinom")
> ### * buildmultinom
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildmultinom
> ### Title: Use 'buildmer' to perform stepwise elimination for 'multinom'
> ###   models from package 'nnet'
> ### Aliases: buildmultinom
> 
> ### ** Examples
> 
> library(buildmer)
> options(contrasts = c("contr.treatment", "contr.poly"))
> library(MASS)
> example(birthwt)

brthwt> bwt <- with(birthwt, {
brthwt+ race <- factor(race, labels = c("white", "black", "other"))
brthwt+ ptd <- factor(ptl > 0)
brthwt+ ftv <- factor(ftv)
brthwt+ levels(ftv)[-(1:2)] <- "2+"
brthwt+ data.frame(low = factor(low), age, lwt, race, smoke = (smoke > 0),
brthwt+            ptd, ht = (ht > 0), ui = (ui > 0), ftv)
brthwt+ })

brthwt> options(contrasts = c("contr.treatment", "contr.poly"))

brthwt> glm(low ~ ., binomial, bwt)

Call:  glm(formula = low ~ ., family = binomial, data = bwt)

Coefficients:
(Intercept)          age          lwt    raceblack    raceother    smokeTRUE  
    0.82302     -0.03723     -0.01565      1.19241      0.74068      0.75553  
    ptdTRUE       htTRUE       uiTRUE         ftv1        ftv2+  
    1.34376      1.91317      0.68020     -0.43638      0.17901  

Degrees of Freedom: 188 Total (i.e. Null);  178 Residual
Null Deviance:	    234.7 
Residual Deviance: 195.5 	AIC: 217.5
> bwt.mu <- buildmultinom(low ~ age*lwt*race*smoke,bwt)
Determining predictor order
Fitting via multinom: low ~ 1
# weights:  2 (1 variable)
initial  value 131.004817 
final  value 117.335998 
converged
Currently evaluating LRT for: age, lwt, race, smoke
Fitting via multinom: low ~ 1 + age
# weights:  3 (2 variable)
initial  value 131.004817 
final  value 115.955980 
converged
Fitting via multinom: low ~ 1 + lwt
# weights:  3 (2 variable)
initial  value 131.004817 
final  value 114.345335 
converged
Fitting via multinom: low ~ 1 + race
# weights:  4 (3 variable)
initial  value 131.004817 
iter  10 value 114.830822
final  value 114.830815 
converged
Fitting via multinom: low ~ 1 + smoke
# weights:  3 (2 variable)
initial  value 131.004817 
final  value 114.902303 
converged
Updating formula: low ~ 1 + lwt
Currently evaluating LRT for: age, race, smoke
Fitting via multinom: low ~ 1 + lwt + age
# weights:  4 (3 variable)
initial  value 131.004817 
final  value 113.561695 
converged
Fitting via multinom: low ~ 1 + lwt + race
# weights:  5 (4 variable)
initial  value 131.004817 
final  value 111.629545 
converged
Fitting via multinom: low ~ 1 + lwt + smoke
# weights:  4 (3 variable)
initial  value 131.004817 
final  value 112.170326 
converged
Updating formula: low ~ 1 + lwt + smoke
Currently evaluating LRT for: age, lwt:smoke, race
Fitting via multinom: low ~ 1 + lwt + smoke + age
# weights:  5 (4 variable)
initial  value 131.004817 
final  value 111.439676 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + lwt:smoke
# weights:  5 (4 variable)
initial  value 131.004817 
iter  10 value 111.185931
iter  10 value 111.185930
final  value 111.185930 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race
# weights:  6 (5 variable)
initial  value 131.004817 
iter  10 value 107.507329
iter  10 value 107.507329
iter  10 value 107.507329
final  value 107.507329 
converged
Updating formula: low ~ 1 + lwt + smoke + race
Currently evaluating LRT for: age, lwt:race, lwt:smoke, race:smoke
Fitting via multinom: low ~ 1 + lwt + smoke + race + age
# weights:  7 (6 variable)
initial  value 131.004817 
iter  10 value 107.288675
final  value 107.288617 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + lwt:race
# weights:  8 (7 variable)
initial  value 131.004817 
iter  10 value 106.779002
final  value 106.758162 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + lwt:smoke
# weights:  7 (6 variable)
initial  value 131.004817 
iter  10 value 107.049402
final  value 107.048261 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + race:smoke
# weights:  8 (7 variable)
initial  value 131.004817 
iter  10 value 106.306585
final  value 106.305709 
converged
Updating formula: low ~ 1 + lwt + smoke + race + race:smoke
Currently evaluating LRT for: age, lwt:race, lwt:smoke
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age
# weights:  9 (8 variable)
initial  value 131.004817 
iter  10 value 106.151467
final  value 106.147182 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race
# weights:  10 (9 variable)
initial  value 131.004817 
iter  10 value 105.586580
final  value 105.489519 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:smoke
# weights:  9 (8 variable)
initial  value 131.004817 
iter  10 value 106.042641
final  value 106.038738 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race
Currently evaluating LRT for: age, lwt:smoke
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + age
# weights:  11 (10 variable)
initial  value 131.004817 
iter  10 value 105.555334
final  value 105.384019 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke
# weights:  11 (10 variable)
initial  value 131.004817 
iter  10 value 105.418090
final  value 105.335956 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke
Currently evaluating LRT for: age, lwt:race:smoke
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + age
# weights:  12 (11 variable)
initial  value 131.004817 
iter  10 value 105.290176
final  value 105.228977 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:race:smoke
# weights:  13 (12 variable)
initial  value 131.004817 
iter  10 value 104.994330
iter  20 value 104.345789
iter  30 value 104.203285
iter  40 value 104.199433
iter  40 value 104.199432
iter  40 value 104.199432
final  value 104.199432 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:race:smoke
Currently evaluating LRT for: age
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age
# weights:  14 (13 variable)
initial  value 131.004817 
iter  10 value 105.029552
iter  20 value 104.291599
iter  30 value 104.139683
iter  40 value 104.139245
final  value 104.139242 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age
Currently evaluating LRT for: age:lwt, age:race, age:smoke
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + age:lwt
# weights:  15 (14 variable)
initial  value 131.004817 
iter  10 value 106.693287
iter  20 value 104.243182
iter  30 value 104.065585
iter  30 value 104.065584
final  value 104.065584 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + age:race
# weights:  16 (15 variable)
initial  value 131.004817 
iter  10 value 113.543573
iter  20 value 104.363116
iter  30 value 104.036333
final  value 104.034824 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + age:smoke
# weights:  15 (14 variable)
initial  value 131.004817 
iter  10 value 107.265550
iter  20 value 104.307447
iter  30 value 104.057301
final  value 104.057206 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + age:smoke
Currently evaluating LRT for: age:lwt, age:race
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + age:lwt
# weights:  16 (15 variable)
initial  value 131.004817 
iter  10 value 110.832324
iter  20 value 104.292931
iter  30 value 103.998424
final  value 103.997896 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + age:race
# weights:  17 (16 variable)
initial  value 131.004817 
iter  10 value 113.649892
iter  20 value 104.381678
iter  30 value 103.989669
iter  40 value 103.986058
iter  40 value 103.986058
final  value 103.986046 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + age:lwt
Currently evaluating LRT for: age:lwt:smoke, age:race
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + age:lwt:smoke
# weights:  17 (16 variable)
initial  value 131.004817 
iter  10 value 111.760213
iter  20 value 104.196842
iter  30 value 104.004644
iter  40 value 103.953094
iter  50 value 103.940825
iter  60 value 103.939578
iter  70 value 103.939094
iter  70 value 103.939094
iter  70 value 103.939093
final  value 103.939093 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + age:race
# weights:  18 (17 variable)
initial  value 131.004817 
iter  10 value 110.895361
iter  20 value 104.439462
iter  30 value 103.964150
final  value 103.952347 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + age:lwt:smoke
Currently evaluating LRT for: age:race
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + age:race
# weights:  19 (18 variable)
initial  value 131.004817 
iter  10 value 111.714493
iter  20 value 104.257331
iter  30 value 103.970981
iter  40 value 103.912339
iter  50 value 103.908463
iter  60 value 103.895887
iter  70 value 103.888304
final  value 103.887807 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + age:race
Currently evaluating LRT for: age:lwt:race, age:race:smoke
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + age:lwt:race
# weights:  21 (20 variable)
initial  value 131.004817 
iter  10 value 113.739320
iter  20 value 104.250254
iter  30 value 103.497135
iter  40 value 103.423325
iter  50 value 103.412252
final  value 103.411722 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + age:race:smoke
# weights:  21 (20 variable)
initial  value 131.004817 
iter  10 value 111.569570
iter  20 value 103.803470
iter  30 value 102.173211
iter  40 value 102.010764
iter  50 value 101.977180
iter  60 value 101.952671
iter  70 value 101.944069
iter  80 value 101.940458
final  value 101.939651 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + age:race:smoke
Currently evaluating LRT for: age:lwt:race
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + smoke:race:age + age:lwt:race
# weights:  23 (22 variable)
initial  value 131.004817 
iter  10 value 113.850816
iter  20 value 104.016313
iter  30 value 101.536278
iter  40 value 101.454315
iter  50 value 101.428063
final  value 101.428039 
converged
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + smoke:race:age + age:lwt:race
Currently evaluating LRT for: age:lwt:race:smoke
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + smoke:race:age + lwt:race:age + age:lwt:race:smoke
# weights:  25 (24 variable)
initial  value 131.004817 
iter  10 value 113.867141
iter  20 value 105.957719
iter  30 value 102.042222
iter  40 value 101.420577
iter  50 value 100.580632
iter  60 value 100.567782
iter  70 value 100.553502
iter  80 value 100.034109
iter  90 value 99.795103
iter 100 value 99.282066
final  value 99.282066 
stopped after 100 iterations
None of the models converged - giving up ordering attempt.
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + smoke:race:age + age:lwt:race
# weights:  23 (22 variable)
initial  value 131.004817 
iter  10 value 113.850816
iter  20 value 104.016313
iter  30 value 101.536278
iter  40 value 101.454315
iter  50 value 101.428063
final  value 101.428039 
converged
Testing terms
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + age + smoke:age + lwt:age + lwt:smoke:age + race:age + smoke:race:age + age:lwt:race
# weights:  21 (20 variable)
initial  value 131.004817 
iter  10 value 112.673895
iter  20 value 103.317798
iter  30 value 102.253418
iter  40 value 102.219399
final  value 102.217247 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + race:age + smoke:race:age + age:lwt:race
# weights:  22 (21 variable)
initial  value 131.004817 
iter  10 value 114.695768
iter  20 value 103.903265
iter  30 value 102.036490
iter  40 value 101.628997
iter  50 value 101.549579
iter  60 value 101.544160
iter  70 value 101.509027
iter  80 value 101.494303
final  value 101.492402 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + age:lwt:race
# weights:  21 (20 variable)
initial  value 131.004817 
iter  10 value 113.739320
iter  20 value 104.250254
iter  30 value 103.497135
iter  40 value 103.423325
iter  50 value 103.412252
final  value 103.411722 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + lwt:smoke:age + race:age + age:race:smoke
# weights:  21 (20 variable)
initial  value 131.004817 
iter  10 value 111.569570
iter  20 value 103.803470
iter  30 value 102.173211
iter  40 value 102.010764
iter  50 value 101.977180
iter  60 value 101.952671
iter  70 value 101.944069
iter  80 value 101.940458
final  value 101.939651 
converged
    grouping           term                block       score       LRT
1         NA              1              NA NA 1          NA        NA
9         NA            lwt            NA NA lwt -4.23649915        NA
14        NA          smoke          NA NA smoke -3.29660560        NA
12        NA           race           NA NA race -4.66299731        NA
121       NA     race:smoke     NA NA race:smoke -1.20161946        NA
91        NA       lwt:race       NA NA lwt:race -0.81619025        NA
10        NA      lwt:smoke      NA NA lwt:smoke -0.54567728        NA
92        NA lwt:race:smoke NA NA lwt:race:smoke -1.13652368 0.4542042
11        NA            age            NA NA age -0.31660097        NA
7         NA      age:smoke      NA NA age:smoke -0.37769987        NA
13        NA        age:lwt        NA NA age:lwt -0.31397855        NA
3         NA  age:lwt:smoke  NA NA age:lwt:smoke -0.31245775 0.7197560
31        NA       age:race       NA NA age:race -0.05128653        NA
32        NA age:race:smoke NA NA age:race:smoke -1.94815570 0.1375616
15        NA   age:lwt:race   NA NA age:lwt:race -0.51161214 0.5995283
    Iteration
1           1
9           1
14          1
12          1
121         1
91          1
10          1
92          1
11          1
7           1
13          1
3           1
31          1
32          1
15          1
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + race:age + smoke:race:age + age:lwt:race
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + race:age + smoke:race:age + age:lwt:race
# weights:  22 (21 variable)
initial  value 131.004817 
iter  10 value 114.695768
iter  20 value 103.903265
iter  30 value 102.036490
iter  40 value 101.628997
iter  50 value 101.549579
iter  60 value 101.544160
iter  70 value 101.509027
iter  80 value 101.494303
final  value 101.492402 
converged
Testing terms
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + age + smoke:age + lwt:age + race:age + smoke:race:age + age:lwt:race
# weights:  20 (19 variable)
initial  value 131.004817 
iter  10 value 116.120269
iter  20 value 103.565861
iter  30 value 102.498162
iter  40 value 102.314460
iter  50 value 102.314320
iter  60 value 102.302858
iter  70 value 102.299336
final  value 102.298874 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + race:age + age:lwt:race
# weights:  20 (19 variable)
initial  value 131.004817 
iter  10 value 114.785908
iter  20 value 104.318733
iter  30 value 103.551057
iter  40 value 103.369117
iter  50 value 103.368501
iter  60 value 103.344729
iter  70 value 103.335931
final  value 103.333183 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + race:age + age:race:smoke
# weights:  20 (19 variable)
initial  value 131.004817 
iter  10 value 110.693633
iter  20 value 103.812661
iter  30 value 102.435788
iter  40 value 102.169499
iter  50 value 102.169382
iter  60 value 102.164331
iter  70 value 102.164199
final  value 102.164197 
converged
    grouping           term                block       score       LRT
1         NA              1              NA NA 1          NA        NA
9         NA            lwt            NA NA lwt -4.23649915        NA
14        NA          smoke          NA NA smoke -3.29660560        NA
12        NA           race           NA NA race -4.66299731        NA
121       NA     race:smoke     NA NA race:smoke -1.20161946        NA
91        NA       lwt:race       NA NA lwt:race -0.81619025        NA
10        NA      lwt:smoke      NA NA lwt:smoke -0.54567728        NA
92        NA lwt:race:smoke NA NA lwt:race:smoke -1.13652368 0.4464305
11        NA            age            NA NA age -0.31660097        NA
7         NA      age:smoke      NA NA age:smoke -0.37769987        NA
13        NA        age:lwt        NA NA age:lwt -0.31397855        NA
31        NA       age:race       NA NA age:race -0.05128653        NA
32        NA age:race:smoke NA NA age:race:smoke -1.94815570 0.1586934
15        NA   age:lwt:race   NA NA age:lwt:race -0.51161214 0.5107912
    Iteration
1           2
9           2
14          2
12          2
121         2
91          2
10          2
92          2
11          2
7           2
13          2
31          2
32          2
15          2
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + race:age + age:race:smoke
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + race:age + age:race:smoke
# weights:  20 (19 variable)
initial  value 131.004817 
iter  10 value 110.693633
iter  20 value 103.812661
iter  30 value 102.435788
iter  40 value 102.169499
iter  50 value 102.169382
iter  60 value 102.164331
iter  70 value 102.164199
final  value 102.164197 
converged
Testing terms
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + age + smoke:age + lwt:age + race:age + age:race:smoke
# weights:  18 (17 variable)
initial  value 131.004817 
iter  10 value 111.511784
iter  20 value 103.584990
iter  30 value 102.906499
final  value 102.874411 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + race:age + age:race:smoke
# weights:  19 (18 variable)
initial  value 131.004817 
iter  10 value 113.677517
iter  20 value 103.736003
iter  30 value 102.294246
iter  40 value 102.199935
final  value 102.199932 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + lwt:age + age:race
# weights:  18 (17 variable)
initial  value 131.004817 
iter  10 value 110.895361
iter  20 value 104.439462
iter  30 value 103.964150
final  value 103.952347 
converged
    grouping           term                block       score       LRT
1         NA              1              NA NA 1          NA        NA
9         NA            lwt            NA NA lwt -4.23649915        NA
14        NA          smoke          NA NA smoke -3.29660560        NA
12        NA           race           NA NA race -4.66299731        NA
121       NA     race:smoke     NA NA race:smoke -1.20161946        NA
91        NA       lwt:race       NA NA lwt:race -0.81619025        NA
10        NA      lwt:smoke      NA NA lwt:smoke -0.54567728        NA
92        NA lwt:race:smoke NA NA lwt:race:smoke -1.13652368 0.4915390
11        NA            age            NA NA age -0.31660097        NA
7         NA      age:smoke      NA NA age:smoke -0.37769987        NA
13        NA        age:lwt        NA NA age:lwt -0.31397855 0.7892083
31        NA       age:race       NA NA age:race -0.05128653        NA
32        NA age:race:smoke NA NA age:race:smoke -1.94815570 0.1672693
    Iteration
1           3
9           3
14          3
12          3
121         3
91          3
10          3
92          3
11          3
7           3
13          3
31          3
32          3
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + race:age + age:race:smoke
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + race:age + age:race:smoke
# weights:  19 (18 variable)
initial  value 131.004817 
iter  10 value 113.677517
iter  20 value 103.736003
iter  30 value 102.294246
iter  40 value 102.199935
final  value 102.199932 
converged
Testing terms
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + age + smoke:age + race:age + age:race:smoke
# weights:  17 (16 variable)
initial  value 131.004817 
iter  10 value 113.260253
iter  20 value 103.380284
iter  30 value 102.904676
iter  40 value 102.896312
final  value 102.896254 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + lwt:smoke:race + age + smoke:age + age:race
# weights:  17 (16 variable)
initial  value 131.004817 
iter  10 value 113.649892
iter  20 value 104.381678
iter  30 value 103.989669
iter  40 value 103.986058
iter  40 value 103.986058
final  value 103.986046 
converged
    grouping           term                block       score       LRT
1         NA              1              NA NA 1          NA        NA
9         NA            lwt            NA NA lwt -4.23649915        NA
14        NA          smoke          NA NA smoke -3.29660560        NA
12        NA           race           NA NA race -4.66299731        NA
121       NA     race:smoke     NA NA race:smoke -1.20161946        NA
91        NA       lwt:race       NA NA lwt:race -0.81619025        NA
10        NA      lwt:smoke      NA NA lwt:smoke -0.54567728        NA
92        NA lwt:race:smoke NA NA lwt:race:smoke -1.13652368 0.4984148
11        NA            age            NA NA age -0.31660097        NA
7         NA      age:smoke      NA NA age:smoke -0.37769987        NA
31        NA       age:race       NA NA age:race -0.05128653        NA
32        NA age:race:smoke NA NA age:race:smoke -1.94815570 0.1676101
    Iteration
1           4
9           4
14          4
12          4
121         4
91          4
10          4
92          4
11          4
7           4
31          4
32          4
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + age + smoke:age + race:age + age:race:smoke
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + age + smoke:age + race:age + age:race:smoke
# weights:  17 (16 variable)
initial  value 131.004817 
iter  10 value 113.260253
iter  20 value 103.380284
iter  30 value 102.904676
iter  40 value 102.896312
final  value 102.896254 
converged
Testing terms
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:smoke + age + smoke:age + race:age + age:race:smoke
# weights:  15 (14 variable)
initial  value 131.004817 
iter  10 value 106.105050
iter  20 value 103.405054
iter  30 value 103.282919
final  value 103.282832 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + age + smoke:age + race:age + age:race:smoke
# weights:  16 (15 variable)
initial  value 131.004817 
iter  10 value 112.377060
iter  20 value 103.463368
iter  30 value 103.147574
final  value 103.147063 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:race + lwt:smoke + age + smoke:age + age:race
# weights:  15 (14 variable)
initial  value 131.004817 
iter  10 value 106.945551
iter  20 value 105.110295
final  value 105.109443 
converged
    grouping           term                block       score       LRT
1         NA              1              NA NA 1          NA        NA
9         NA            lwt            NA NA lwt -4.23649915        NA
14        NA          smoke          NA NA smoke -3.29660560        NA
12        NA           race           NA NA race -4.66299731        NA
121       NA     race:smoke     NA NA race:smoke -1.20161946        NA
91        NA       lwt:race       NA NA lwt:race -0.81619025 0.6793779
10        NA      lwt:smoke      NA NA lwt:smoke -0.54567728 0.4787899
11        NA            age            NA NA age -0.31660097        NA
7         NA      age:smoke      NA NA age:smoke -0.37769987        NA
31        NA       age:race       NA NA age:race -0.05128653        NA
32        NA age:race:smoke NA NA age:race:smoke -1.94815570 0.1093513
    Iteration
1           5
9           5
14          5
12          5
121         5
91          5
10          5
11          5
7           5
31          5
32          5
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + lwt:smoke + age + smoke:age + race:age + age:race:smoke
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:smoke + age + smoke:age + race:age + age:race:smoke
# weights:  15 (14 variable)
initial  value 131.004817 
iter  10 value 106.105050
iter  20 value 103.405054
iter  30 value 103.282919
final  value 103.282832 
converged
Testing terms
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age + smoke:age + race:age + age:race:smoke
# weights:  14 (13 variable)
initial  value 131.004817 
iter  10 value 105.873202
iter  20 value 103.763675
iter  30 value 103.714427
iter  30 value 103.714427
final  value 103.714419 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + lwt:smoke + age + smoke:age + age:race
# weights:  13 (12 variable)
initial  value 131.004817 
iter  10 value 105.724901
iter  20 value 105.653914
final  value 105.653905 
converged
    grouping           term                block       score        LRT
1         NA              1              NA NA 1          NA         NA
9         NA            lwt            NA NA lwt -4.23649915         NA
14        NA          smoke          NA NA smoke -3.29660560         NA
12        NA           race           NA NA race -4.66299731         NA
121       NA     race:smoke     NA NA race:smoke -1.20161946         NA
10        NA      lwt:smoke      NA NA lwt:smoke -0.54567728 0.35285215
11        NA            age            NA NA age -0.31660097         NA
7         NA      age:smoke      NA NA age:smoke -0.37769987         NA
31        NA       age:race       NA NA age:race -0.05128653         NA
32        NA age:race:smoke NA NA age:race:smoke -1.94815570 0.09338047
    Iteration
1           6
9           6
14          6
12          6
121         6
10          6
11          6
7           6
31          6
32          6
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + age + smoke:age + race:age + age:race:smoke
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age + smoke:age + race:age + age:race:smoke
# weights:  14 (13 variable)
initial  value 131.004817 
iter  10 value 105.873202
iter  20 value 103.763675
iter  30 value 103.714427
iter  30 value 103.714427
final  value 103.714419 
converged
Testing terms
Fitting via multinom: low ~ 1 + smoke + race + smoke:race + age + smoke:age + race:age + age:race:smoke
# weights:  13 (12 variable)
initial  value 131.004817 
iter  10 value 106.784139
iter  20 value 105.352546
iter  30 value 105.323722
iter  40 value 105.323408
final  value 105.323370 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age + smoke:age + age:race
# weights:  12 (11 variable)
initial  value 131.004817 
iter  10 value 105.956845
final  value 105.883084 
converged
    grouping           term                block       score        LRT
1         NA              1              NA NA 1          NA         NA
9         NA            lwt            NA NA lwt -4.23649915 0.07283686
14        NA          smoke          NA NA smoke -3.29660560         NA
12        NA           race           NA NA race -4.66299731         NA
121       NA     race:smoke     NA NA race:smoke -1.20161946         NA
11        NA            age            NA NA age -0.31660097         NA
7         NA      age:smoke      NA NA age:smoke -0.37769987         NA
31        NA       age:race       NA NA age:race -0.05128653         NA
32        NA age:race:smoke NA NA age:race:smoke -1.94815570 0.11433010
    Iteration
1           7
9           7
14          7
12          7
121         7
11          7
7           7
31          7
32          7
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + age + smoke:age + age:race
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age + smoke:age + age:race
# weights:  12 (11 variable)
initial  value 131.004817 
iter  10 value 105.956845
final  value 105.883084 
converged
Testing terms
Fitting via multinom: low ~ 1 + smoke + race + smoke:race + age + smoke:age + age:race
# weights:  11 (10 variable)
initial  value 131.004817 
iter  10 value 107.899599
final  value 107.753818 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + age + smoke:age + age:race
# weights:  10 (9 variable)
initial  value 131.004817 
iter  10 value 106.885518
final  value 106.882826 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age + age:race
# weights:  11 (10 variable)
initial  value 131.004817 
iter  10 value 105.979041
final  value 105.910009 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age + age:smoke
# weights:  10 (9 variable)
initial  value 131.004817 
iter  10 value 106.087047
final  value 106.063327 
converged
    grouping       term            block       score        LRT Iteration
1         NA          1          NA NA 1          NA         NA         8
9         NA        lwt        NA NA lwt -4.23649915 0.05307779         8
14        NA      smoke      NA NA smoke -3.29660560         NA         8
12        NA       race       NA NA race -4.66299731         NA         8
121       NA race:smoke NA NA race:smoke -1.20161946 0.36797439         8
11        NA        age        NA NA age -0.31660097         NA         8
7         NA  age:smoke  NA NA age:smoke -0.37769987 0.81649588         8
31        NA   age:race   NA NA age:race -0.05128653 0.83506692         8
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + age + age:smoke
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age + age:smoke
# weights:  10 (9 variable)
initial  value 131.004817 
iter  10 value 106.087047
final  value 106.063327 
converged
Testing terms
Fitting via multinom: low ~ 1 + smoke + race + smoke:race + age + age:smoke
# weights:  9 (8 variable)
initial  value 131.004817 
iter  10 value 107.932079
final  value 107.918788 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + age + age:smoke
# weights:  8 (7 variable)
initial  value 131.004817 
iter  10 value 107.124010
final  value 107.123547 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age
# weights:  9 (8 variable)
initial  value 131.004817 
iter  10 value 106.151467
final  value 106.147182 
converged
    grouping       term            block      score        LRT Iteration
1         NA          1          NA NA 1         NA         NA         9
9         NA        lwt        NA NA lwt -4.2364992 0.05405756         9
14        NA      smoke      NA NA smoke -3.2966056         NA         9
12        NA       race       NA NA race -4.6629973         NA         9
121       NA race:smoke NA NA race:smoke -1.2016195 0.34637984         9
11        NA        age        NA NA age -0.3166010         NA         9
7         NA  age:smoke  NA NA age:smoke -0.3776999 0.68215623         9
Updating formula: low ~ 1 + lwt + smoke + race + smoke:race + age
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + smoke:race + age
# weights:  9 (8 variable)
initial  value 131.004817 
iter  10 value 106.151467
final  value 106.147182 
converged
Testing terms
Fitting via multinom: low ~ 1 + smoke + race + smoke:race + age
# weights:  8 (7 variable)
initial  value 131.004817 
iter  10 value 108.015837
final  value 108.015622 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + age
# weights:  7 (6 variable)
initial  value 131.004817 
iter  10 value 107.288675
final  value 107.288617 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race + race:smoke
# weights:  8 (7 variable)
initial  value 131.004817 
iter  10 value 106.306585
final  value 106.305709 
converged
    grouping       term            block     score        LRT Iteration
1         NA          1          NA NA 1        NA         NA        10
9         NA        lwt        NA NA lwt -4.236499 0.05322372        10
14        NA      smoke      NA NA smoke -3.296606         NA        10
12        NA       race       NA NA race -4.662997         NA        10
121       NA race:smoke NA NA race:smoke -1.201619 0.31936025        10
11        NA        age        NA NA age -0.316601 0.57338292        10
Updating formula: low ~ 1 + lwt + smoke + race + race:smoke
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race + race:smoke
# weights:  8 (7 variable)
initial  value 131.004817 
iter  10 value 106.306585
final  value 106.305709 
converged
Testing terms
Fitting via multinom: low ~ 1 + smoke + race + race:smoke
# weights:  7 (6 variable)
initial  value 131.004817 
iter  10 value 108.408902
final  value 108.408887 
converged
Fitting via multinom: low ~ 1 + lwt + smoke + race
# weights:  6 (5 variable)
initial  value 131.004817 
iter  10 value 107.507329
iter  10 value 107.507329
iter  10 value 107.507329
final  value 107.507329 
converged
    grouping       term            block     score        LRT Iteration
1         NA          1          NA NA 1        NA         NA        11
9         NA        lwt        NA NA lwt -4.236499 0.04027278        11
14        NA      smoke      NA NA smoke -3.296606         NA        11
12        NA       race       NA NA race -4.662997         NA        11
121       NA race:smoke NA NA race:smoke -1.201619 0.30070683        11
Updating formula: low ~ 1 + lwt + smoke + race
Fitting ML reference model
Fitting via multinom: low ~ 1 + lwt + smoke + race
# weights:  6 (5 variable)
initial  value 131.004817 
iter  10 value 107.507329
iter  10 value 107.507329
iter  10 value 107.507329
final  value 107.507329 
converged
Testing terms
Fitting via multinom: low ~ 1 + smoke + race
# weights:  5 (4 variable)
initial  value 131.004817 
final  value 109.987355 
converged
Fitting via multinom: low ~ 1 + lwt + race
# weights:  5 (4 variable)
initial  value 131.004817 
final  value 111.629545 
converged
Fitting via multinom: low ~ 1 + lwt + smoke
# weights:  4 (3 variable)
initial  value 131.004817 
final  value 112.170326 
converged
   grouping  term       block     score         LRT Iteration
1        NA     1     NA NA 1        NA          NA        12
9        NA   lwt   NA NA lwt -4.236499 0.025939410        12
14       NA smoke NA NA smoke -3.296606 0.004087717        12
12       NA  race  NA NA race -4.662997 0.009438131        12
All terms are significant
> 
> 
> 
> base::options(contrasts = c(unordered = "contr.treatment",ordered = "contr.poly"))
> cleanEx()

detaching 'package:MASS'

> nameEx("conv")
> ### * conv
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: conv
> ### Title: Test a model for convergence
> ### Aliases: conv
> 
> ### ** Examples
> 
> library(buildmer)
> library(lme4)
Loading required package: Matrix
> good1 <- lm(Reaction ~ Days,sleepstudy)
> good2 <- lmer(Reaction ~ Days + (Days|Subject),sleepstudy)
> bad <- lmer(Reaction ~ Days + (Days|Subject),sleepstudy,control=lmerControl(
+             optimizer='bobyqa',optCtrl=list(maxfun=1)))
Warning in commonArgs(par, fn, control, environment()) :
  maxfun < 10 * length(par)^2 is not recommended.
Warning in optwrap(optimizer, devfun, getStart(start, rho$lower, rho$pp),  :
  convergence code 1 from bobyqa: bobyqa -- maximum number of function evaluations exceeded
Warning in checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  unable to evaluate scaled gradient
Warning in checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge: degenerate  Hessian with 1 negative eigenvalues
> sapply(c(good1,good2,bad),conv)
 coefficients     residuals       effects          rank fitted.values 
         TRUE          TRUE          TRUE          TRUE          TRUE 
       assign            qr   df.residual       xlevels          call 
         TRUE          TRUE          TRUE          TRUE          TRUE 
        terms         model                             
         TRUE          TRUE          TRUE         FALSE 
> 
> 
> 
> cleanEx()

detaching 'package:lme4', 'package:Matrix'

> nameEx("diag-formula-method")
> ### * diag-formula-method
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diag,formula-method
> ### Title: Diagonalize the random-effect covariance structure, possibly
> ###   assisting convergence
> ### Aliases: diag,formula-method
> 
> ### ** Examples
> 
> # 1. Create explicit columns for factor variables
> library(buildmer)
> vowels <- cbind(vowels,model.matrix(~vowel,vowels))
> # 2. Create formula with diagonal covariance structure
> form <- diag(f1 ~ (vowel1+vowel2+vowel3+vowel4)*timepoint*following + 
+ 	     ((vowel1+vowel2+vowel3+vowel4)*timepoint*following | participant) +
+ 	     (timepoint | word))
> # 3. Convert formula to buildmer terms list, grouping terms starting with 'vowel'
> terms <- tabulate.formula(form,group='vowel[^:]')
> # 4. Directly pass the terms object to buildmer(), using the hidden 'dep' argument to specify
> # the dependent variable
> 
> 
> 
> cleanEx()
> nameEx("remove.terms")
> ### * remove.terms
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove.terms
> ### Title: Remove terms from an lme4 formula
> ### Aliases: remove.terms
> 
> ### ** Examples
> 
> library(buildmer)
> remove.terms(Reaction ~ Days + (Days|Subject),'(Days|Subject)')
Reaction ~ 1 + Days + (1 | Subject)
> # illustration of the marginality checking mechanism:
> remove.terms(Reaction ~ Days + (Days|Subject),'(1|Subject)') #refuses to remove the term
Reaction ~ 1 + Days + (1 + Days | Subject)
> remove.terms(Reaction ~ Days + (Days|Subject),c('(Days|Subject)','(1|Subject)')) #also
Reaction ~ 1 + Days + (1 | Subject)
>            #refuses to remove the term, because marginality is checked before removal!
> step1 <- remove.terms(Reaction ~ Days + (Days|Subject),'(Days|Subject)')
> step2 <- remove.terms(step1,'(1|Subject)') #works
> 
> 
> 
> cleanEx()
> nameEx("tabulate.formula")
> ### * tabulate.formula
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tabulate.formula
> ### Title: Parse a formula into a buildmer terms list
> ### Aliases: tabulate.formula
> 
> ### ** Examples
> 
> form <- diag(f1 ~ (vowel1+vowel2+vowel3+vowel4)*timepoint*following +
+              ((vowel1+vowel2+vowel3+vowel4)*timepoint*following|participant) + (timepoint|word))
> tabulate.formula(form)
   index    grouping                       term
1   <NA>        <NA>                          1
2   <NA>        <NA>                     vowel1
3   <NA>        <NA>                     vowel2
4   <NA>        <NA>                     vowel3
5   <NA>        <NA>                     vowel4
6   <NA>        <NA>                  timepoint
7   <NA>        <NA>           vowel1:timepoint
8   <NA>        <NA>           vowel2:timepoint
9   <NA>        <NA>           vowel3:timepoint
10  <NA>        <NA>           vowel4:timepoint
11  <NA>        <NA>                  following
12  <NA>        <NA>           vowel1:following
13  <NA>        <NA>           vowel2:following
14  <NA>        <NA>           vowel3:following
15  <NA>        <NA>           vowel4:following
16  <NA>        <NA>        timepoint:following
17  <NA>        <NA> vowel1:timepoint:following
18  <NA>        <NA> vowel2:timepoint:following
19  <NA>        <NA> vowel3:timepoint:following
20  <NA>        <NA> vowel4:timepoint:following
21  21 1 participant                          1
22  22 1 participant                     vowel1
23  23 1 participant                     vowel2
24  24 1 participant                     vowel3
25  25 1 participant                     vowel4
26  26 1 participant                  timepoint
27  27 1 participant           vowel1:timepoint
28  28 1 participant           vowel2:timepoint
29  29 1 participant           vowel3:timepoint
30  30 1 participant           vowel4:timepoint
31  31 1 participant                  following
32  32 1 participant           vowel1:following
33  33 1 participant           vowel2:following
34  34 1 participant           vowel3:following
35  35 1 participant           vowel4:following
36  36 1 participant        timepoint:following
37  37 1 participant vowel1:timepoint:following
38  38 1 participant vowel2:timepoint:following
39  39 1 participant vowel3:timepoint:following
40  40 1 participant vowel4:timepoint:following
41  41 1        word                          1
42  42 1        word                  timepoint
                                          code
1                                            1
2                                       vowel1
3                                       vowel2
4                                       vowel3
5                                       vowel4
6                                    timepoint
7                             vowel1:timepoint
8                             vowel2:timepoint
9                             vowel3:timepoint
10                            vowel4:timepoint
11                                   following
12                            vowel1:following
13                            vowel2:following
14                            vowel3:following
15                            vowel4:following
16                         timepoint:following
17                  vowel1:timepoint:following
18                  vowel2:timepoint:following
19                  vowel3:timepoint:following
20                  vowel4:timepoint:following
21                          21 1 participant 1
22                     22 1 participant vowel1
23                     23 1 participant vowel2
24                     24 1 participant vowel3
25                     25 1 participant vowel4
26                  26 1 participant timepoint
27           27 1 participant vowel1:timepoint
28           28 1 participant vowel2:timepoint
29           29 1 participant vowel3:timepoint
30           30 1 participant vowel4:timepoint
31                  31 1 participant following
32           32 1 participant vowel1:following
33           33 1 participant vowel2:following
34           34 1 participant vowel3:following
35           35 1 participant vowel4:following
36        36 1 participant timepoint:following
37 37 1 participant vowel1:timepoint:following
38 38 1 participant vowel2:timepoint:following
39 39 1 participant vowel3:timepoint:following
40 40 1 participant vowel4:timepoint:following
41                                 41 1 word 1
42                         42 1 word timepoint
                                       block
1                                    NA NA 1
2                               NA NA vowel1
3                               NA NA vowel2
4                               NA NA vowel3
5                               NA NA vowel4
6                            NA NA timepoint
7                     NA NA vowel1:timepoint
8                     NA NA vowel2:timepoint
9                     NA NA vowel3:timepoint
10                    NA NA vowel4:timepoint
11                           NA NA following
12                    NA NA vowel1:following
13                    NA NA vowel2:following
14                    NA NA vowel3:following
15                    NA NA vowel4:following
16                 NA NA timepoint:following
17          NA NA vowel1:timepoint:following
18          NA NA vowel2:timepoint:following
19          NA NA vowel3:timepoint:following
20          NA NA vowel4:timepoint:following
21                          NA participant 1
22                     NA participant vowel1
23                     NA participant vowel2
24                     NA participant vowel3
25                     NA participant vowel4
26                  NA participant timepoint
27           NA participant vowel1:timepoint
28           NA participant vowel2:timepoint
29           NA participant vowel3:timepoint
30           NA participant vowel4:timepoint
31                  NA participant following
32           NA participant vowel1:following
33           NA participant vowel2:following
34           NA participant vowel3:following
35           NA participant vowel4:following
36        NA participant timepoint:following
37 NA participant vowel1:timepoint:following
38 NA participant vowel2:timepoint:following
39 NA participant vowel3:timepoint:following
40 NA participant vowel4:timepoint:following
41                                 NA word 1
42                         NA word timepoint
> tabulate.formula(form,group='vowel[1-4]')
   index    grouping                       term
1   <NA>        <NA>                          1
2   <NA>        <NA>                     vowel1
3   <NA>        <NA>                     vowel2
4   <NA>        <NA>                     vowel3
5   <NA>        <NA>                     vowel4
6   <NA>        <NA>                  timepoint
7   <NA>        <NA>           vowel1:timepoint
8   <NA>        <NA>           vowel2:timepoint
9   <NA>        <NA>           vowel3:timepoint
10  <NA>        <NA>           vowel4:timepoint
11  <NA>        <NA>                  following
12  <NA>        <NA>           vowel1:following
13  <NA>        <NA>           vowel2:following
14  <NA>        <NA>           vowel3:following
15  <NA>        <NA>           vowel4:following
16  <NA>        <NA>        timepoint:following
17  <NA>        <NA> vowel1:timepoint:following
18  <NA>        <NA> vowel2:timepoint:following
19  <NA>        <NA> vowel3:timepoint:following
20  <NA>        <NA> vowel4:timepoint:following
21  21 1 participant                          1
22  22 1 participant                     vowel1
23  23 1 participant                     vowel2
24  24 1 participant                     vowel3
25  25 1 participant                     vowel4
26  26 1 participant                  timepoint
27  27 1 participant           vowel1:timepoint
28  28 1 participant           vowel2:timepoint
29  29 1 participant           vowel3:timepoint
30  30 1 participant           vowel4:timepoint
31  31 1 participant                  following
32  32 1 participant           vowel1:following
33  33 1 participant           vowel2:following
34  34 1 participant           vowel3:following
35  35 1 participant           vowel4:following
36  36 1 participant        timepoint:following
37  37 1 participant vowel1:timepoint:following
38  38 1 participant vowel2:timepoint:following
39  39 1 participant vowel3:timepoint:following
40  40 1 participant vowel4:timepoint:following
41  41 1        word                          1
42  42 1        word                  timepoint
                                          code
1                                            1
2                                       vowel1
3                                       vowel2
4                                       vowel3
5                                       vowel4
6                                    timepoint
7                             vowel1:timepoint
8                             vowel2:timepoint
9                             vowel3:timepoint
10                            vowel4:timepoint
11                                   following
12                            vowel1:following
13                            vowel2:following
14                            vowel3:following
15                            vowel4:following
16                         timepoint:following
17                  vowel1:timepoint:following
18                  vowel2:timepoint:following
19                  vowel3:timepoint:following
20                  vowel4:timepoint:following
21                          21 1 participant 1
22                     22 1 participant vowel1
23                     23 1 participant vowel2
24                     24 1 participant vowel3
25                     25 1 participant vowel4
26                  26 1 participant timepoint
27           27 1 participant vowel1:timepoint
28           28 1 participant vowel2:timepoint
29           29 1 participant vowel3:timepoint
30           30 1 participant vowel4:timepoint
31                  31 1 participant following
32           32 1 participant vowel1:following
33           33 1 participant vowel2:following
34           34 1 participant vowel3:following
35           35 1 participant vowel4:following
36        36 1 participant timepoint:following
37 37 1 participant vowel1:timepoint:following
38 38 1 participant vowel2:timepoint:following
39 39 1 participant vowel3:timepoint:following
40 40 1 participant vowel4:timepoint:following
41                                 41 1 word 1
42                         42 1 word timepoint
                                           block
1                                        NA NA 1
2                               NA NA vowel[1-4]
3                               NA NA vowel[1-4]
4                               NA NA vowel[1-4]
5                               NA NA vowel[1-4]
6                                NA NA timepoint
7                     NA NA vowel[1-4]:timepoint
8                     NA NA vowel[1-4]:timepoint
9                     NA NA vowel[1-4]:timepoint
10                    NA NA vowel[1-4]:timepoint
11                               NA NA following
12                    NA NA vowel[1-4]:following
13                    NA NA vowel[1-4]:following
14                    NA NA vowel[1-4]:following
15                    NA NA vowel[1-4]:following
16                     NA NA timepoint:following
17          NA NA vowel[1-4]:timepoint:following
18          NA NA vowel[1-4]:timepoint:following
19          NA NA vowel[1-4]:timepoint:following
20          NA NA vowel[1-4]:timepoint:following
21                              NA participant 1
22                     NA participant vowel[1-4]
23                     NA participant vowel[1-4]
24                     NA participant vowel[1-4]
25                     NA participant vowel[1-4]
26                      NA participant timepoint
27           NA participant vowel[1-4]:timepoint
28           NA participant vowel[1-4]:timepoint
29           NA participant vowel[1-4]:timepoint
30           NA participant vowel[1-4]:timepoint
31                      NA participant following
32           NA participant vowel[1-4]:following
33           NA participant vowel[1-4]:following
34           NA participant vowel[1-4]:following
35           NA participant vowel[1-4]:following
36            NA participant timepoint:following
37 NA participant vowel[1-4]:timepoint:following
38 NA participant vowel[1-4]:timepoint:following
39 NA participant vowel[1-4]:timepoint:following
40 NA participant vowel[1-4]:timepoint:following
41                                     NA word 1
42                             NA word timepoint
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  30.16 0.85 40.87 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
